plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version "$rev_spring_boot"
    id 'io.spring.dependency-management' version "$rev_spring_dep_mngt"
}

group = 'com.epam.aicode'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.modelmapper:modelmapper:$rev_modelmapper"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
        "-parameters"
    ]
}

eclipse {
    jdt {
        file {
            withProperties { props ->
                props['org.eclipse.jdt.core.compiler.codegen.methodParameters'] = 'generate'
            }
        }
    }
}

wrapper {
    gradleVersion = "$rev_gradle"
}